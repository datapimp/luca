(function() {
  this.JST || (this.JST = {});
  this.JST["docs/templates/pages/getting_started"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('\n      <h2>1.) Include the libraries</h2>\n\n<h4>Include the files from the CDN</h4>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    ...\n    &lt;link rel="stylesheet" href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.0/css/bootstrap-combined.min.css" /&gt;\n    &lt;link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/3.0.2/css/font-awesome.css" /&gt;\n    &lt;link rel="stylesheet" href="//datapimp.github.com/luca/vendor/assets/stylesheets/luca-ui.css" /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    ...\n    &lt;script type="text/javascript" src="//datapimp.github.com/luca/vendor/assets/javascripts/luca-dependencies.min.js"&gt;&lt;/script&gt;\n    &lt;script type="text/javascript" src="//datapimp.github.com/luca/vendor/assets/javascripts/luca.min.js"&gt;&lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h4>Use the Ruby gem in your Rails app</h4>\n\n<pre><code># Gemfile.lock\ngem \'luca\'\ngem \'bootstrap-rails\'\n</code></pre>\n\n<p>Including the luca gem makes everything available via the asset pipeline. </p>\n\n<pre><code># application.coffee\n#= require luca-dependencies.min\n#= require luca.min\n</code></pre>\n\n<p>We depend on the bootstrap css externally.</p>\n\n<pre><code>/*\n *= require twitter/bootstrap\n *= require luca-ui.css\n */\n</code></pre>\n\n<h2>2.) Generate your application</h2>\n\n<p>The luca gem ships with a rails generator to generate an application skeleton.  You can run it:\n    rails g luca:application sample    </p>\n\n<p>Doing this will generate an application skeleton for you:</p>\n\n<pre><code>- app/assets/javascripts/sample\n  - collections\n  - lib\n    - collection_manager.coffee\n    - router.coffee\n  - models\n  - views\n  - application.coffee\n  - config.coffee\n  - index.coffee\n</code></pre>\n\n<h2>3.) Start developing</h2>\n\n<p>The style we use to develop Luca applications is to develop all of our components and views as encpasulated modules.  We start with the smallest units, and then build them up into components using containers, and then build them into pages which are controlled by the main Application. </p>\n<ul class="nav">\n  <li>\n    <a href="#samples">View some examples</a>\n  </li>\n  <li>\n    <a href="#tutorials">Follow some tutorials</a>\n  </li>\n  <li>\n    <a href="#docs">Read the auto-generated documentation</a>\n  </li>\n</ul>\n</ul>\n');}return __p.join('');};
}).call(this);
